// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as $$Array from "bs-platform/lib/es6/array.js";
import * as React from "react";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as ReasonReactRouter from "reason-react/src/ReasonReactRouter.bs.js";

function toRoute(url) {
  var hashes = $$Array.to_list(url.hash.split("/"));
  var match = url.path;
  if (match) {
    switch (match._0) {
      case "" :
      case "/" :
          if (match._1) {
            return /* NotFound */1;
          }
          break;
      default:
        return /* NotFound */1;
    }
  }
  if (!hashes) {
    return /* NotFound */1;
  }
  if (hashes._0 !== "") {
    return /* NotFound */1;
  }
  var match$1 = hashes._1;
  if (!match$1) {
    return /* Home */0;
  }
  if (match$1._0 !== "chats") {
    return /* NotFound */1;
  }
  var match$2 = match$1._1;
  if (match$2 && !match$2._1) {
    return /* Chat */{
            _0: match$2._0
          };
  } else {
    return /* NotFound */1;
  }
}

function toUrl(id) {
  if (typeof id === "number") {
    if (id !== 0) {
      return "#/404";
    } else {
      return "#";
    }
  } else {
    return "#/chats/" + id._0;
  }
}

var Config = {
  toRoute: toRoute,
  toUrl: toUrl
};

function Route$Link(Props) {
  var route = Props.route;
  var style = Props.style;
  var className = Props.className;
  var children = Props.children;
  var href = toUrl(route);
  var onClick = function (e) {
    e.preventDefault();
    return ReasonReactRouter.push(href);
  };
  var tmp = {
    href: href,
    onClick: onClick
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  if (style !== undefined) {
    tmp.style = Caml_option.valFromOption(style);
  }
  return React.createElement("a", tmp, children);
}

var Link = {
  make: Route$Link
};

export {
  Config ,
  Link ,
  
}
/* react Not a pure module */
