// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Js_exn from "bs-platform/lib/es6/js_exn.js";
import * as Js_dict from "bs-platform/lib/es6/js_dict.js";
import * as Js_json from "bs-platform/lib/es6/js_json.js";
import * as Js_option from "bs-platform/lib/es6/js_option.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";

var ppx_printed_query = "fragment User on User   {\nid  \nname  \npicture  \n}\n";

function parse(value) {
  var value$1 = Js_option.getExn(Js_json.decodeObject(value));
  var value$2 = Js_dict.get(value$1, "id");
  var tmp;
  if (value$2 !== undefined) {
    var value$3 = Caml_option.valFromOption(value$2);
    var value$4 = Js_json.decodeString(value$3);
    tmp = value$4 !== undefined ? value$4 : Js_exn.raiseError("graphql_ppx: Expected string, got " + JSON.stringify(value$3));
  } else {
    tmp = Js_exn.raiseError("graphql_ppx: Field id on type User is missing");
  }
  var value$5 = Js_dict.get(value$1, "name");
  var tmp$1;
  if (value$5 !== undefined) {
    var value$6 = Caml_option.valFromOption(value$5);
    var value$7 = Js_json.decodeString(value$6);
    tmp$1 = value$7 !== undefined ? value$7 : Js_exn.raiseError("graphql_ppx: Expected string, got " + JSON.stringify(value$6));
  } else {
    tmp$1 = Js_exn.raiseError("graphql_ppx: Field name on type User is missing");
  }
  var value$8 = Js_dict.get(value$1, "picture");
  var tmp$2;
  if (value$8 !== undefined) {
    var value$9 = Caml_option.valFromOption(value$8);
    var match = Js_json.decodeNull(value$9);
    tmp$2 = match !== undefined ? undefined : Caml_option.some(value$9);
  } else {
    tmp$2 = undefined;
  }
  return {
          id: tmp,
          name: tmp$1,
          picture: tmp$2
        };
}

function ret_type(f) {
  return {};
}

var MT_Ret = {};

var User = {
  ppx_printed_query: ppx_printed_query,
  query: ppx_printed_query,
  parse: parse,
  name: "User",
  ret_type: ret_type,
  MT_Ret: MT_Ret
};

var UserFragment = {
  User: User
};

var ppx_printed_query$1 = "fragment Message on Message   {\nid  \ncreatedAt  \ncontent  \nisMine  \nchat  {\nid  \n}\n\n}\n";

function parse$1(value) {
  var value$1 = Js_option.getExn(Js_json.decodeObject(value));
  var value$2 = Js_dict.get(value$1, "id");
  var tmp;
  if (value$2 !== undefined) {
    var value$3 = Caml_option.valFromOption(value$2);
    var value$4 = Js_json.decodeString(value$3);
    tmp = value$4 !== undefined ? value$4 : Js_exn.raiseError("graphql_ppx: Expected string, got " + JSON.stringify(value$3));
  } else {
    tmp = Js_exn.raiseError("graphql_ppx: Field id on type Message is missing");
  }
  var value$5 = Js_dict.get(value$1, "createdAt");
  var value$6 = Js_dict.get(value$1, "content");
  var tmp$1;
  if (value$6 !== undefined) {
    var value$7 = Caml_option.valFromOption(value$6);
    var value$8 = Js_json.decodeString(value$7);
    tmp$1 = value$8 !== undefined ? value$8 : Js_exn.raiseError("graphql_ppx: Expected string, got " + JSON.stringify(value$7));
  } else {
    tmp$1 = Js_exn.raiseError("graphql_ppx: Field content on type Message is missing");
  }
  var value$9 = Js_dict.get(value$1, "isMine");
  var tmp$2;
  if (value$9 !== undefined) {
    var value$10 = Caml_option.valFromOption(value$9);
    var value$11 = Js_json.decodeBoolean(value$10);
    tmp$2 = value$11 !== undefined ? value$11 : Js_exn.raiseError("graphql_ppx: Expected boolean, got " + JSON.stringify(value$10));
  } else {
    tmp$2 = Js_exn.raiseError("graphql_ppx: Field isMine on type Message is missing");
  }
  var value$12 = Js_dict.get(value$1, "chat");
  var tmp$3;
  if (value$12 !== undefined) {
    var value$13 = Caml_option.valFromOption(value$12);
    var match = Js_json.decodeNull(value$13);
    if (match !== undefined) {
      tmp$3 = undefined;
    } else {
      var value$14 = Js_option.getExn(Js_json.decodeObject(value$13));
      var value$15 = Js_dict.get(value$14, "id");
      var tmp$4;
      if (value$15 !== undefined) {
        var value$16 = Caml_option.valFromOption(value$15);
        var value$17 = Js_json.decodeString(value$16);
        tmp$4 = value$17 !== undefined ? value$17 : Js_exn.raiseError("graphql_ppx: Expected string, got " + JSON.stringify(value$16));
      } else {
        tmp$4 = Js_exn.raiseError("graphql_ppx: Field id on type Chat is missing");
      }
      tmp$3 = {
        id: tmp$4
      };
    }
  } else {
    tmp$3 = undefined;
  }
  return {
          id: tmp,
          createdAt: value$5 !== undefined ? Caml_option.valFromOption(value$5) : Js_exn.raiseError("graphql_ppx: Field createdAt on type Message is missing"),
          content: tmp$1,
          isMine: tmp$2,
          chat: tmp$3
        };
}

var name = "Message";

function ret_type$1(f) {
  return {};
}

var MT_Ret$1 = {};

var Message = {
  ppx_printed_query: ppx_printed_query$1,
  query: ppx_printed_query$1,
  parse: parse$1,
  name: name,
  ret_type: ret_type$1,
  MT_Ret: MT_Ret$1
};

var MessageFragment = {
  Message: Message
};

var ppx_printed_query$2 = "fragment Chat on Chat   {\nid  \nname  \npicture  \nlastMessage  {\n...Message   \n}\n\n}\nfragment Message on Message   {\nid  \ncreatedAt  \ncontent  \nisMine  \nchat  {\nid  \n}\n\n}\n";

function parse$2(value) {
  var value$1 = Js_option.getExn(Js_json.decodeObject(value));
  var value$2 = Js_dict.get(value$1, "id");
  var tmp;
  if (value$2 !== undefined) {
    var value$3 = Caml_option.valFromOption(value$2);
    var value$4 = Js_json.decodeString(value$3);
    tmp = value$4 !== undefined ? value$4 : Js_exn.raiseError("graphql_ppx: Expected string, got " + JSON.stringify(value$3));
  } else {
    tmp = Js_exn.raiseError("graphql_ppx: Field id on type Chat is missing");
  }
  var value$5 = Js_dict.get(value$1, "name");
  var tmp$1;
  if (value$5 !== undefined) {
    var value$6 = Caml_option.valFromOption(value$5);
    var match = Js_json.decodeNull(value$6);
    if (match !== undefined) {
      tmp$1 = undefined;
    } else {
      var value$7 = Js_json.decodeString(value$6);
      tmp$1 = value$7 !== undefined ? value$7 : Js_exn.raiseError("graphql_ppx: Expected string, got " + JSON.stringify(value$6));
    }
  } else {
    tmp$1 = undefined;
  }
  var value$8 = Js_dict.get(value$1, "picture");
  var tmp$2;
  if (value$8 !== undefined) {
    var value$9 = Caml_option.valFromOption(value$8);
    var match$1 = Js_json.decodeNull(value$9);
    tmp$2 = match$1 !== undefined ? undefined : Caml_option.some(value$9);
  } else {
    tmp$2 = undefined;
  }
  var value$10 = Js_dict.get(value$1, "lastMessage");
  var tmp$3;
  if (value$10 !== undefined) {
    var value$11 = Caml_option.valFromOption(value$10);
    var match$2 = Js_json.decodeNull(value$11);
    tmp$3 = match$2 !== undefined ? undefined : Caml_option.some(parse$1(value$11));
  } else {
    tmp$3 = undefined;
  }
  return {
          id: tmp,
          name: tmp$1,
          picture: tmp$2,
          lastMessage: tmp$3
        };
}

function ret_type$2(f) {
  return {};
}

var MT_Ret$2 = {};

var Chat = {
  ppx_printed_query: ppx_printed_query$2,
  query: ppx_printed_query$2,
  parse: parse$2,
  name: "Chat",
  ret_type: ret_type$2,
  MT_Ret: MT_Ret$2
};

var ChatFragment = {
  Chat: Chat
};

var ppx_printed_query$3 = "fragment MessagesResult on MessagesResult   {\ncursor  \nhasMore  \nmessages  {\n...Message   \n}\n\n}\nfragment Message on Message   {\nid  \ncreatedAt  \ncontent  \nisMine  \nchat  {\nid  \n}\n\n}\n";

function parse$3(value) {
  var value$1 = Js_option.getExn(Js_json.decodeObject(value));
  var value$2 = Js_dict.get(value$1, "cursor");
  var tmp;
  if (value$2 !== undefined) {
    var value$3 = Caml_option.valFromOption(value$2);
    var match = Js_json.decodeNull(value$3);
    if (match !== undefined) {
      tmp = undefined;
    } else {
      var value$4 = Js_json.decodeNumber(value$3);
      tmp = value$4 !== undefined ? value$4 : Js_exn.raiseError("graphql_ppx: Expected float, got " + JSON.stringify(value$3));
    }
  } else {
    tmp = undefined;
  }
  var value$5 = Js_dict.get(value$1, "hasMore");
  var tmp$1;
  if (value$5 !== undefined) {
    var value$6 = Caml_option.valFromOption(value$5);
    var value$7 = Js_json.decodeBoolean(value$6);
    tmp$1 = value$7 !== undefined ? value$7 : Js_exn.raiseError("graphql_ppx: Expected boolean, got " + JSON.stringify(value$6));
  } else {
    tmp$1 = Js_exn.raiseError("graphql_ppx: Field hasMore on type MessagesResult is missing");
  }
  var value$8 = Js_dict.get(value$1, "messages");
  return {
          cursor: tmp,
          hasMore: tmp$1,
          messages: value$8 !== undefined ? Js_option.getExn(Js_json.decodeArray(Caml_option.valFromOption(value$8))).map(parse$1) : Js_exn.raiseError("graphql_ppx: Field messages on type MessagesResult is missing")
        };
}

function ret_type$3(f) {
  return {};
}

var MT_Ret$3 = {};

var MessagesResult = {
  ppx_printed_query: ppx_printed_query$3,
  query: ppx_printed_query$3,
  parse: parse$3,
  name: "MessagesResult",
  ret_type: ret_type$3,
  MT_Ret: MT_Ret$3
};

var MessagesResultFragment = {
  MessagesResult: MessagesResult
};

export {
  UserFragment ,
  MessageFragment ,
  ChatFragment ,
  MessagesResultFragment ,
  
}
/* No side effect */
