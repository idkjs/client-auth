// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Emotion from "@ahrefs/bs-emotion/src/Emotion.bs.js";

var styles = Emotion.css(undefined, /* :: */{
      _0: Emotion.textAlign(Emotion.center),
      _1: /* :: */{
        _0: Emotion.marginTop(Emotion.rem(3)),
        _1: /* :: */{
          _0: Emotion.color(Emotion.Css.Color.white),
          _1: /* [] */0
        }
      }
    });

function make(props) {
  var stylesObject = {
    className: styles
  };
  var newProps = Object.assign(stylesObject, props);
  var chil = props.children;
  return React.createElement("div", newProps, [chil !== undefined ? chil : null]);
}

var Container = {
  styles: styles,
  make: make
};

var styles$1 = Emotion.css(undefined, /* :: */{
      _0: Emotion.fontSize(Emotion.rem(1.875)),
      _1: /* :: */{
        _0: Emotion.textDecoration(Emotion.none),
        _1: /* :: */{
          _0: Emotion.color(Emotion.hex("4299e1")),
          _1: /* [] */0
        }
      }
    });

function make$1(props) {
  var stylesObject = {
    className: styles$1
  };
  var newProps = Object.assign(stylesObject, props);
  var chil = props.children;
  return React.createElement("div", newProps, [chil !== undefined ? chil : null]);
}

var $$Text = {
  styles: styles$1,
  make: make$1
};

var styles$2 = Emotion.css(undefined, /* :: */{
      _0: Emotion.fontSize(Emotion.rem(1.875)),
      _1: /* :: */{
        _0: Emotion.color(Emotion.hex("1a202c")),
        _1: /* :: */{
          _0: Emotion.marginBottom(Emotion.rem(1)),
          _1: /* [] */0
        }
      }
    });

function make$2(props) {
  var stylesObject = {
    className: styles$2
  };
  var newProps = Object.assign(stylesObject, props);
  var chil = props.children;
  return React.createElement("a", newProps, [chil !== undefined ? chil : null]);
}

var Link = {
  styles: styles$2,
  make: make$2
};

var styles$3 = Emotion.css(undefined, /* :: */{
      _0: Emotion.height(Emotion.px(75)),
      _1: /* [] */0
    });

function make$3(props) {
  var stylesObject = {
    className: styles$3
  };
  var newProps = Object.assign(stylesObject, props);
  var chil = props.children;
  return React.createElement("div", newProps, [chil !== undefined ? chil : null]);
}

var SignForm = {
  styles: styles$3,
  make: make$3
};

var styles$4 = Emotion.css(undefined, /* :: */{
      _0: Emotion.padding(Emotion.px(20)),
      _1: /* [] */0
    });

function make$4(props) {
  var stylesObject = {
    className: styles$4
  };
  var newProps = Object.assign(stylesObject, props);
  var chil = props.children;
  return React.createElement("form", newProps, [chil !== undefined ? chil : null]);
}

var ActualForm = {
  styles: styles$4,
  make: make$4
};

function styles$5(background) {
  return Emotion.css(undefined, /* :: */{
              _0: Emotion.position(Emotion.absolute),
              _1: /* :: */{
                _0: Emotion.top(/* zero */-789508312),
                _1: /* :: */{
                  _0: Emotion.left(/* zero */-789508312),
                  _1: /* :: */{
                    _0: Emotion.bottom(/* zero */-789508312),
                    _1: /* :: */{
                      _0: Emotion.right(/* zero */-789508312),
                      _1: /* :: */{
                        _0: Emotion.display(/* flex */-1010954439),
                        _1: /* :: */{
                          _0: Emotion.justifyContent(Emotion.center),
                          _1: /* :: */{
                            _0: Emotion.alignItems(Emotion.center),
                            _1: /* :: */{
                              _0: Emotion.flexDirection(Emotion.column),
                              _1: /* :: */{
                                _0: Emotion.p("background-color", background),
                                _1: /* :: */{
                                  _0: Emotion.cursor(/* pointer */-786317123),
                                  _1: /* :: */{
                                    _0: Emotion.select("& > div", /* :: */{
                                          _0: Emotion.padding(Emotion.px(20)),
                                          _1: /* [] */0
                                        }),
                                    _1: /* [] */0
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            });
}

function make$5(props) {
  var stylesObject = {
    className: styles$5(props.background)
  };
  var newProps = Object.assign(stylesObject, props);
  var chil = props.children;
  return React.createElement("div", newProps, [chil !== undefined ? chil : null]);
}

var App = {
  styles: styles$5,
  make: make$5
};

function styles$6(sectionWidth) {
  return Emotion.css(undefined, /* :: */{
              _0: Emotion.paddingBottom(Emotion.px(35)),
              _1: /* :: */{
                _0: Emotion.p("width", sectionWidth),
                _1: /* [] */0
              }
            });
}

function make$6(props) {
  var stylesObject = {
    className: styles$6(props.sectionWidth)
  };
  var newProps = Object.assign(stylesObject, props);
  var chil = props.children;
  return React.createElement("div", newProps, [chil !== undefined ? chil : null]);
}

var Section = {
  styles: styles$6,
  make: make$6
};

var styles$7 = Emotion.css(undefined, /* :: */{
      _0: Emotion.fontWeight(400),
      _1: /* :: */{
        _0: Emotion.color(Emotion.Css.Color.white),
        _1: /* [] */0
      }
    });

function make$7(props) {
  var stylesObject = {
    className: styles$7
  };
  var newProps = Object.assign(stylesObject, props);
  var chil = props.children;
  return React.createElement("legend", newProps, [chil !== undefined ? chil : null]);
}

var Legend = {
  styles: styles$7,
  make: make$7
};

var styles$8 = Emotion.css(undefined, /* :: */{
      _0: Emotion.color(Emotion.Css.Color.white),
      _1: /* [] */0
    });

function make$8(props) {
  var stylesObject = {
    className: styles$8
  };
  var newProps = Object.assign(stylesObject, props);
  var chil = props.children;
  return React.createElement("label", newProps, [chil !== undefined ? chil : null]);
}

var Label = {
  styles: styles$8,
  make: make$8
};

function styles$9(primaryBg) {
  return Emotion.css(undefined, /* :: */{
              _0: Emotion.color(Emotion.Css.Color.white),
              _1: /* :: */{
                _0: Emotion.select("& ::placeholder", /* :: */{
                      _0: Emotion.p("color", primaryBg),
                      _1: /* [] */0
                    }),
                _1: /* [] */0
              }
            });
}

function make$9(props) {
  var stylesObject = {
    className: styles$9(props.primaryBg)
  };
  var newProps = Object.assign(stylesObject, props);
  var chil = props.children;
  return React.createElement("input", newProps, [chil !== undefined ? chil : null]);
}

var Input = {
  styles: styles$9,
  make: make$9
};

var styles$10 = Emotion.css(undefined, /* :: */{
      _0: Emotion.position(Emotion.fixed),
      _1: /* :: */{
        _0: Emotion.color(Emotion.Css.Color.red),
        _1: /* :: */{
          _0: Emotion.fontSize(Emotion.px(15)),
          _1: /* :: */{
            _0: Emotion.marginTop(Emotion.px(20)),
            _1: /* [] */0
          }
        }
      }
    });

function make$10(props) {
  var stylesObject = {
    className: styles$10
  };
  var newProps = Object.assign(stylesObject, props);
  var chil = props.children;
  return React.createElement("div", newProps, [chil !== undefined ? chil : null]);
}

var ErrorMessage = {
  styles: styles$10,
  make: make$10
};

var styles$11 = Emotion.css(undefined, /* :: */{
      _0: Emotion.width(Emotion.pct(100)),
      _1: /* :: */{
        _0: Emotion.position(Emotion.relative),
        _1: /* :: */{
          _0: Emotion.select("input", /* :: */{
                _0: Emotion.color(Emotion.Css.Color.white),
                _1: /* :: */{
                  _0: Emotion.select("& ::placeholder", /* :: */{
                        _0: Emotion.color(Emotion.Css.Color.red),
                        _1: /* [] */0
                      }),
                  _1: /* [] */0
                }
              }),
          _1: /* :: */{
            _0: Emotion.select("> div ::before", /* :: */{
                  _0: Emotion.borderColor(Emotion.Css.Color.white),
                  _1: /* [] */0
                }),
            _1: /* [] */0
          }
        }
      }
    });

function make$11(props) {
  var stylesObject = {
    className: styles$11
  };
  var newProps = Object.assign(stylesObject, props);
  var chil = props.children;
  return React.createElement("div", newProps, [chil !== undefined ? chil : null]);
}

var TextField = {
  styles: styles$11,
  make: make$11
};

var styles$12 = Emotion.css(undefined, /* :: */{
      _0: Emotion.width(Emotion.px(100)),
      _1: /* :: */{
        _0: Emotion.display(/* block */888960333),
        _1: /* :: */{
          _0: Emotion.margin(Emotion.auto),
          _1: /* :: */{
            _0: Emotion.backgroundColor(Emotion.Css.Color.green),
            _1: /* [] */0
          }
        }
      }
    });

function make$12(props) {
  var stylesObject = {
    className: styles$12
  };
  var newProps = Object.assign(stylesObject, props);
  var chil = props.children;
  return React.createElement("button", newProps, [chil !== undefined ? chil : null]);
}

var Button = {
  styles: styles$12,
  make: make$12
};

export {
  Container ,
  $$Text ,
  Link ,
  SignForm ,
  ActualForm ,
  App ,
  Section ,
  Legend ,
  Label ,
  Input ,
  ErrorMessage ,
  TextField ,
  Button ,
  
}
/* styles Not a pure module */
