// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";

var initialState = {
  username: "",
  password: "",
  error: ""
};

function reducer(state, action) {
  if (typeof action === "number") {
    return initialState;
  }
  switch (action.TAG | 0) {
    case /* SetUsername */0 :
        return {
                username: action._0,
                password: state.password,
                error: state.error
              };
    case /* SetPassword */1 :
        return {
                username: state.username,
                password: action._0,
                error: state.error
              };
    case /* SetError */2 :
        return {
                username: state.username,
                password: state.password,
                error: action._0
              };
    
  }
}

function useForm(callback) {
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var handleChange = function (evt) {
    evt.persist();
    var match = evt.target.name;
    switch (match) {
      case "error" :
          return Curry._1(dispatch, {
                      TAG: /* SetError */2,
                      _0: evt.target.value
                    });
      case "password" :
          return Curry._1(dispatch, {
                      TAG: /* SetPassword */1,
                      _0: evt.target.value
                    });
      case "username" :
          return Curry._1(dispatch, {
                      TAG: /* SetUsername */0,
                      _0: evt.target.value
                    });
      default:
        return ;
    }
  };
  var handleSubmit = function (evt) {
    evt.preventDefault();
    Curry._1(callback, undefined);
    return Curry._1(dispatch, /* ResetState */0);
  };
  return [
          match[0],
          handleChange,
          handleSubmit
        ];
}

export {
  initialState ,
  reducer ,
  useForm ,
  
}
/* react Not a pure module */
