// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Emotion from "@ahrefs/bs-emotion/src/Emotion.bs.js";
import * as ApolloHooks from "reason-apollo-hooks/src/ApolloHooks.bs.js";
import * as ReForm$WhatsAppReason from "../utils/ReForm.bs.js";
import * as Mutations$WhatsAppReason from "../graphql/Mutations.bs.js";
import * as SignInReducer$WhatsAppReason from "./SignInReducer.bs.js";

var styles = Emotion.css(undefined, /* :: */{
      _0: Emotion.textAlign(Emotion.center),
      _1: /* :: */{
        _0: Emotion.marginTop(Emotion.rem(3)),
        _1: /* [] */0
      }
    });

function make(props) {
  var stylesObject = {
    className: styles
  };
  var newProps = Object.assign(stylesObject, props);
  var chil = props.children;
  return React.createElement("div", newProps, [chil !== undefined ? chil : null]);
}

var Container = {
  styles: styles,
  make: make
};

var styles$1 = Emotion.css(undefined, /* :: */{
      _0: Emotion.fontSize(Emotion.rem(1.875)),
      _1: /* :: */{
        _0: Emotion.textDecoration(Emotion.none),
        _1: /* :: */{
          _0: Emotion.color(Emotion.hex("4299e1")),
          _1: /* [] */0
        }
      }
    });

function make$1(props) {
  var stylesObject = {
    className: styles$1
  };
  var newProps = Object.assign(stylesObject, props);
  var chil = props.children;
  return React.createElement("div", newProps, [chil !== undefined ? chil : null]);
}

var $$Text = {
  styles: styles$1,
  make: make$1
};

var styles$2 = Emotion.css(undefined, /* :: */{
      _0: Emotion.fontSize(Emotion.rem(1.875)),
      _1: /* :: */{
        _0: Emotion.color(Emotion.hex("1a202c")),
        _1: /* :: */{
          _0: Emotion.marginBottom(Emotion.rem(1)),
          _1: /* [] */0
        }
      }
    });

function make$2(props) {
  var stylesObject = {
    className: styles$2
  };
  var newProps = Object.assign(stylesObject, props);
  var chil = props.children;
  return React.createElement("a", newProps, [chil !== undefined ? chil : null]);
}

var Link = {
  styles: styles$2,
  make: make$2
};

function get(state, field) {
  if (field) {
    return state.password;
  } else {
    return state.email;
  }
}

function set(state, field, value) {
  if (field) {
    return {
            email: state.email,
            password: value
          };
  } else {
    return {
            email: value,
            password: state.password
          };
  }
}

var StateLenses = {
  get: get,
  set: set
};

var LoginForm = ReForm$WhatsAppReason.Make({
      set: set,
      get: get
    });

function useLoginForm(onSubmit) {
  return Curry._7(LoginForm.use, {
              email: "",
              password: ""
            }, /* Schema */{
              _0: [
                {
                  TAG: /* Email */0,
                  _0: /* Email */0
                },
                {
                  TAG: /* Custom */10,
                  _0: /* Email */0,
                  _1: (function (values) {
                      if (values.email.length === 0) {
                        return /* Error */{
                                _0: "Email must not be empty"
                              };
                      } else {
                        return /* Valid */0;
                      }
                    })
                },
                {
                  TAG: /* Custom */10,
                  _0: /* Password */1,
                  _1: (function (values) {
                      if (values.password.length === 0) {
                        return /* Error */{
                                _0: "Password must not be empty"
                              };
                      } else {
                        return /* Valid */0;
                      }
                    })
                }
              ]
            }, (function (param) {
                Curry._1(onSubmit, param.state.values);
                
              }), undefined, undefined, undefined, undefined);
}

function SignInFormHooks(Props) {
  ApolloHooks.useMutation(undefined, undefined, undefined, undefined, undefined, undefined, Mutations$WhatsAppReason.SignIn.definition);
  var logger = function (param) {
    console.log("Form submitted");
    
  };
  var match = SignInReducer$WhatsAppReason.useForm(logger);
  var handleChange = match[1];
  var state = match[0];
  return React.createElement("div", {
              className: "section is-fullheight"
            }, React.createElement("div", {
                  className: "container"
                }, React.createElement("div", {
                      className: "column is-4 is-offset-4"
                    }, React.createElement("div", {
                          className: "box"
                        }, React.createElement("form", {
                              onSubmit: match[2]
                            }, React.createElement("div", {
                                  className: "field"
                                }, React.createElement("label", {
                                      className: "label"
                                    }, "Username"), React.createElement("div", {
                                      className: "control"
                                    }, React.createElement("input", {
                                          className: "input",
                                          name: "username",
                                          required: true,
                                          type: "username",
                                          value: state.username,
                                          onChange: handleChange
                                        }))), React.createElement("div", {
                                  className: "field"
                                }, React.createElement("label", {
                                      className: "label"
                                    }, "Password"), React.createElement("div", {
                                      className: "control"
                                    }, React.createElement("input", {
                                          className: "input",
                                          name: "password",
                                          required: true,
                                          type: "password",
                                          value: state.password,
                                          onChange: handleChange
                                        }))), React.createElement("button", {
                                  className: "button is-block is-info is-fullwidth",
                                  type: "submit"
                                }, "Login"))))));
}

var make$3 = SignInFormHooks;

export {
  Container ,
  $$Text ,
  Link ,
  StateLenses ,
  LoginForm ,
  useLoginForm ,
  make$3 as make,
  
}
/* styles Not a pure module */
